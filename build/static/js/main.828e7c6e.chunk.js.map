{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","personService","getAll","axios","get","create","newObject","post","remove","id","delete","update","put","SuccessNotification","message","className","ErrorNotification","Filter","filters","handleFiltersChange","value","onChange","PersonForm","props","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","Persons","filterShow","removePerson","map","person","name","number","onClick","App","useState","persons","setPersons","setNewName","setNewNumber","setFilters","status","setStatus","successMessage","setSuccessMessage","errorMessage","setErrorMessage","useEffect","then","response","data","filter","toLowerCase","includes","event","some","target","console","log","preventDefault","current","window","confirm","setTimeout","alert","catch","error","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.828e7c6e.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl)\r\n}\r\n\r\nconst create = newObject => {\r\n  return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst remove = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  return axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\n\r\nconst personService = { getAll, create, remove, update }\r\n\r\nexport default personService","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons.js'\n\nconst SuccessNotification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"success\">\n      {message}\n    </div>\n  )\n}\n\nconst ErrorNotification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nconst Filter = ({filters, handleFiltersChange}) => {\n  return (\n    <>\n      <div>\n        filter shown with <input value={filters} onChange={handleFiltersChange}/>\n      </div>\n    </>\n  )\n}\n\nconst PersonForm = (props) => {\n  return (\n    <>\n      <form onSubmit={props.addPerson}>\n        <div>\n          name: <input value={props.newName} onChange={props.handleNameChange}/>\n        </div>\n        <div>\n          number: <input value={props.newNumber} onChange={props.handleNumberChange}/>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </>\n  )\n}\n\nconst Persons = ({filterShow, removePerson}) => {\n  return (\n    <>\n      {filterShow.map(person => <div key={person.name}>{person.name} {person.number} <button onClick={() => removePerson(person.name, person.id)}>delete</button></div>)}\n    </>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filters, setFilters ] = useState('')\n  const [ status, setStatus] = useState(false)\n  const [ successMessage, setSuccessMessage ] = useState(null)\n  const [ errorMessage, setErrorMessage ] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(response => {\n        setPersons(response.data)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const current = persons.filter(person => person.name === newName);\n    const newObject = { name: newName, number: newNumber }\n\n    if(persons.some(person => person.name === newName)) {\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one`)) {\n        personService\n          .update(current[0].id, newObject)\n          .then(response => {\n            setPersons(persons.map(person => person.id !== current[0].id ? person : response.data))\n            setNewName('')\n            setNewNumber('')\n            setTimeout(() => {\n              alert(`Update ${current[0].name} success!`)\n            }, 300)\n           })\n           .catch(error => {\n            setErrorMessage(`Information of ${newName} has already been removed from server`)\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 5000)\n            setPersons(persons.filter(person => person.id !== current[0].id));\n            console.log(error.response.data)\n          })\n      }\n    } else {\n      personService\n        .create(newObject)\n        .then(response => {\n          setPersons(persons.concat(response.data))\n          setNewName('')\n          setNewNumber('')\n          setSuccessMessage(`Added ${newName}`)\n          setTimeout(() => {\n            setSuccessMessage(null)\n          }, 5000)\n        })\n        .catch(error => {\n          setErrorMessage(error.response.data.error)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n          console.log(error.response.data)\n        })\n    }\n  }\n\n  const removePerson = (name, id) => {\n    if(window.confirm(`Delete ${name} ?`)){\n      personService\n       .remove(id)\n       .then(response => {\n         setPersons(persons.filter(person => person.id !== id))\n         setTimeout(() => {\n           alert(`Delete ${name} success!`)\n         }, 300)\n       })\n       .catch(error => {\n        setErrorMessage(`Information of ${name} has already been removed from server`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n       })\n    }\n  }\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n  \n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const handleFiltersChange = (event) => {\n    if(persons.some(person => person.name.toLowerCase().includes(event.target.value.toLowerCase()))) {\n      setStatus(true)\n    } else {\n      setStatus(false)\n    }\n\n    console.log(event.target.value)\n    setFilters(event.target.value)\n  }\n\n  const filterShow = status ? persons.filter(person => person.name.toLowerCase().includes(filters.toLowerCase())) : persons\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <SuccessNotification message={successMessage} />\n      <ErrorNotification message={errorMessage} />\n      <Filter filters={filters} handleFiltersChange={handleFiltersChange}/>\n      <h3>Add a new</h3>\n      <PersonForm addPerson={addPerson} newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange}/>\n      <h3>Numbers</h3>\n      <Persons filterShow={filterShow} removePerson={removePerson}/>\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}